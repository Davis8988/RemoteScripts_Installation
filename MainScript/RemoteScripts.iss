; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!



#define MyAppName "RemoteScriptsDavid"
#define SETUP_VERSION "2.0"
#define MyAppPublisher "DP99662"
#define NEW_LINE '#13#10'
#define SHARE_NAME "RemoteScripts"

#define SRC_COMPILE_DIR ".."

#include "..\Addons\CMD_DefineSection.txt";



[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{2D5256BF-6991-448B-BC20-6EE2C2F77381}
AppName={#MyAppName}
AppVersion={#SETUP_VERSION}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={#DEFAULT_INSTALLATION_DIR}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
InfoBeforeFile={#INFORMATION_FILE_BEFORE_INSTALL}
InfoAfterFile={#INFORMATION_FILE_AFTER_INSTALL}
OutputDir={#COMPILED_INSTALLATION_FILE_OUTPUT_DIR}
OutputBaseFilename=RemoteScriptsDavid_Install
Compression=lzma
SolidCompression=yes
WindowVisible=yes
SetupLogging=yes

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Files]
; NOTE: Don't use "Flags: ignoreversion" on any shared system files
Source: "{#SRC_COMPILE_DIR}\InstallData\Scripts\RemoteScripts\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs

Source: "{#SRC_COMPILE_DIR}\InstallData\Scripts\RemoteScripts\Run\Dynamic\TemplateRun_Dynamic.bat"; DestDir: "{app}\Run\Dynamic"; Flags: ignoreversion recursesubdirs createallsubdirs deleteafterinstall
Source: "{#SRC_COMPILE_DIR}\InstallData\Scripts\RemoteScripts\Run\Static\TemplateRun_Static.bat";   DestDir: "{app}\Run\Static";  Flags: ignoreversion recursesubdirs createallsubdirs deleteafterinstall

Source: "{#IMAGES_DIR}\*"; Flags: DontCopy;

[Tasks]
Name: DynamicRunScript;        Description: Generate Script for Dynamic Computer List;
Name: StaticRunScript;         Description: Generate Script for Static Computer List;

[Run]
Filename: "{cmd}"; Parameters: " /c explorer.exe \\{code:getPCname|{app}}\RemoteScripts"; Description: "Open Installation Dir"; Flags: postinstall nowait skipifsilent runhidden


[Dirs]
Name: "{app}"; Permissions: everyone-full


[Icons]
Name: "{group}\{cm:UninstallProgram,{#MyAppName}}"; Filename: "{uninstallexe}"



[Code]
// Global Variables:
var
  {Get Computers Names Input Page}
    idNumberPageComputersNamesInput: Integer;
    radioBtnLoadComputerListMethod: TNewRadioButton;
    radioBtnEnterManuallyMethod: TNewRadioButton;
    textFieldComputersNamesFile: TEdit;
    btnLoadExistingComputersNamesFile: TButton;
    textBoxComputersNamesInput: TNewMemo; 
    textFieldComputersGroupName: TEdit;
    
  {Credentials Input Page}
    idNumberPageCredentialsInput: Integer;
    textFieldComputersUserNameInput: TEdit;
    textFieldComputersPasswordInput: TEdit; 
    
  {Command to run Input Page}
    idNumberPageCommandToRun: Integer;
    textBoxCommandToRun: TNewMemo;
    textFieldCommandName: TEdit;
    checkBoxAddAskIfSureToStaticRun: TNewCheckBox;
  
  {Uninstall Page - Start}
    UninstallButton: TNewButton;
    PageNameLabel: string;
    PageDescriptionLabel: string;
    CancelButtonEnabled: Boolean;
    CancelButtonModalResult: Integer;
    checkBoxRemoveSharingOfRemoteScriptsDir: TNewCheckBox; 
    checkBoxCompletelyRemoveInstallationDirectory: TNewCheckBox; 
    
  fileTextFieldWidth: Integer;
  namesTextFieldWidth: Integer;
  userAndPasswordTextFieldWidth: Integer;
  inputTextBoxWidth: Integer;
  
#include "..\Addons\IncludeFunctionsToMainScript\Include.pas"
#include "..\Addons\IncludeFunctionsToMainScript\GrowWizard.pas"
#include "..\Addons\IncludeFunctionsToMainScript\HelperFunctions.pas"


// Get current installing computer name
function getPCname(Param: String): String;
begin
  Result := GetComputerNameString();
end;



// This procedure is called automatically each time the installer file{.msi} is executed
procedure InitializeWizard;
begin
  fileTextFieldWidth := 550;
  namesTextFieldWidth := 170;
  userAndPasswordTextFieldWidth := namesTextFieldWidth;
  inputTextBoxWidth := 625;
  
  Log({#NEW_LINE} + {#NEW_LINE} + ' --------- Initializing Setup Wizard --------- ' +{#NEW_LINE} + {#NEW_LINE});
  
  Log('initializePageComputersNamesInput');
  initializePageComputersNamesInput();
  
  Log('initializePageCredentialsInput');
  initializePageCredentialsInput();
  
  Log('initializePageCommandToRun');
  initializePageCommandToRun();
  
  Log('LoadPreviousData');
  LoadPreviousData();
  
  Log('initializeBackgroundImage');
  initializeBackgroundImage();
  
  Log('GrowWizard');
  GrowWizard(ScaleX(200), ScaleY(200));
  
end;


function NextButtonClick(CurPageID: Integer): Boolean;
{
  This Setup Pages Order Codes:
     wpSelectDir
     wpSelectComponents
     idNumberPageComputersNamesInput
     idNumberPageCredentialsInput
     idNumberPageCommandToRun
     wpSelectTasks
     wpReady
     wpPreparing
     wpInstalling
     wpInfoAfter
     wpFinished
}
begin
  
  Result := True;
  if (CurPageID = wpSelectTasks) then
  begin
    if not ((IsTaskSelected('DynamicRunScript')) or (IsTaskSelected('StaticRunScript'))) then
    begin
      Log(' **** User did not pick any task **** ');
      MsgBox('Must select at least one task to be executed.', mbError, MB_OK);
      Result := False;
    end;
    
  end;
  
end;

procedure CurStepChanged(CurStep: TSetupStep);
{
CurStep=ssInstall just before the actual installation starts.
CurStep=ssPostInstall just after the actual installation finishes. 
CurStep=ssDone just before Setup terminates after a successful install.
}

begin
  if (CurStep=ssInstall) then begin
    Log({#NEW_LINE} + {#NEW_LINE} + 'Installation Begins:'+{#NEW_LINE});
  end;
  
  
  if (CurStep=ssPostInstall) then
  begin
    Log({#NEW_LINE} + ' Finished copying scripts to installation folder. Now configuring installation folder: '+ExpandConstant('{app}'));
    
    Log('shareInstallationDir');
    shareInstallationDir();
    
    Log('handleComputersListInput');
    handleComputersListInput();
    
    Log('writeNewActionBatFileToSharedDefinedActionsDir');
    writeNewActionBatFileToSharedDefinedActionsDir();
    
    Log('handleNewRemoteCommandFiles');
    handleNewRemoteCommandFiles();
    
    Log('updateStaticAndDynamicRunScripts');
    updateStaticAndDynamicRunScripts();
    
    Log({#NEW_LINE} + ' Finished Generating\Configuring Remote Scripts ');
    
  end;
  
  if (CurStep=ssDone) then begin
    Log('Copying log file from '''+ExpandConstant('{log}')+''' to installation dir: '''+ExpandConstant('{app}')+'''');
    FileCopy(ExpandConstant('{log}') , ExpandConstant('{app}\LastInstallation.log') , False);
  end;
end;



